{"version":3,"file":"index.m.js","sources":["../src/proximity/helpers/dom.js","../src/proximity/helpers/easings.js","../src/proximity/helpers/math.js","../src/proximity/modules/proximityPlugins.js","../src/proximity/helpers/distance.js","../src/main.js","../src/proximity/proximity.js"],"sourcesContent":["\n\n\n\nconst getRect = (el) => {\n    const elRect = el.getBoundingClientRect()\n    const docScrolls = { \n        left : document.body.scrollLeft + document.documentElement.scrollLeft, \n        top : document.body.scrollTop + document.documentElement.scrollTop\n    };\n    return {\n        minX: elRect.left + docScrolls.left, \n        maxX: elRect.width + elRect.left + docScrolls.left,\n        minY: elRect.top + docScrolls.top, \n        maxY: elRect.height + elRect.top + docScrolls.top\n    };\n}\n\n\nconst getMousePos = (e) => {\n    let x = 0;\n    let y = 0;\n    if (!e) var e = window.event;\n    if (e.pageX || e.pageY) {\n        x = e.pageX;\n        y = e.pageY;\n    }\n    else if (e.clientX || e.clientY) {\n        x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n        y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n    }\n    return { x, y }\n};\n\n\nconst getScrollPos = (e) => {\n    let x\n    let y\n\n    return { x, y }\n}\n   \nconst isElement = (el) =>{\n    return el instanceof Element || el instanceof HTMLDocument;  \n}\n\n\nexport {\n    getMousePos,\n    getRect,\n    isElement,\n    getScrollPos\n}","\n/*\n * List of all the easings availiable\n *\n*/\nconst linear =  t => t \nconst easeInQuad =  t => t*t \nconst easeOutQuad =  t => t*(2-t) \nconst easeInOutQuad =  t => t<.5 ? 2*t*t : -1+(4-2*t)*t \nconst easeInCubic =  t => t*t*t \nconst easeOutCubic =  t => (--t)*t*t+1 \nconst easeInOutCubic =  t => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 \nconst easeInQuart =  t => t*t*t*t \nconst easeOutQuart =  t => 1-(--t)*t*t*t \nconst easeInOutQuart =  t => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t \nconst easeInQuint =  t => t*t*t*t*t \nconst easeOutQuint =  t => 1+(--t)*t*t*t*t \nconst easeInOutQuint =  t => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t\n\nexport {\n    linear,\n    easeInQuad,\n    easeOutQuad,\n    easeInOutQuad,\n    easeInCubic,\n    easeOutCubic,\n    easeInOutCubic,\n    easeInQuart,\n    easeOutQuart,\n    easeInOutQuart,\n    easeInQuint,\n    easeOutQuint,\n    easeInOutQuint\n}","/*\n * List of useful Math hlpers\n *\n*/\n\n//convert a range to another range\nconst map = (n, start1, stop1, start2, stop2)  => ((n-start1)/(stop1-start1))*(stop2-start2)+start2 \n\n//avoid escaping values\nconst clamp = (n,min,max) => Math.min(Math.max(n, min), max)\nconst toFixedFloat = (float,num) => parseFloat(float.toFixed(num));\n\nconst distancePoints = (x1, y1, x2, y2) => Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n\nexport {\n    map,\n    clamp,\n    toFixedFloat\n}","import * as distFunctions from '../helpers/distance'\nimport { map,clamp,toFixedFloat } from '../helpers/math'\nimport { getRect } from '../helpers/dom'\n\n\n\n/*\n * Distance to a box\n *\n*/\nclass ProximityBox{\n    constructor(el,params){\n        this.el = el\n        this.rect = getRect(el)\n        this.params = params\n    }\n    update(mousePos){\n        let distance = distFunctions.BOX(this.rect,mousePos)\n        let progress = toFixedFloat(clamp(map(distance,this.params.range[1],this.params.range[0],0,1),0,1),3);\n        let isInRange = progress > 0\n        this.params.onProgress({distance,progress,isInRange,mousePos})\n    }\n}\n/*\n\nthis.params.onProgress({\n\n    \n    getDistance : () => {distFunctions.BOX(this.rect,mousePos)},\n    getProgress : () => {toFixedFloat(clamp(map(distance,this.params.range[1],this.params.range[0],0,1),0,1),3)},\n    getInRange : () => {progress > 0}\n   \n})\n\n\n*/\n\n/*\n * Distance to a circle\n *\n*/\nclass ProximityRadius{\n    constructor(el,params){\n        this.el = el\n        this.rect = getRect(el)\n        this.params = params\n    }\n    update(mousePos){\n        let distance = distFunctions.RADIUS(this.rect,mousePos)\n        let progress = toFixedFloat(clamp(map(distance,this.params.range[1],this.params.range[0],0,1),0,1),3);\n        let isInRange = progress > 0\n        this.params.onProgress({distance,progress,isInRange,mousePos})\n    }\n}\n\n/*\n * Distance to a point\n *\n*/\nclass ProximityPoint{\n    constructor(coords,params){\n        this.coords = coords\n        this.params = params\n    }\n    update(mousePos){\n        let distance = distFunctions.POINT(this.coords,mousePos)\n        let progress = toFixedFloat(clamp(map(distance,this.params.range[1],this.params.range[0],0,1),0,1),3);\n        let isInRange = progress > 0\n        this.params.onProgress({distance,progress,isInRange,mousePos})\n    }\n}\n\n/*\n * distance to Y axis\n *\n*/\nclass ProximityY{\n    constructor(coords,params){\n        this.coords = coords\n        this.params = params\n    }\n    update(mousePos){\n        let distance = distFunctions.Y(this.coords,mousePos)\n        let progress = toFixedFloat(clamp(map(distance,this.params.range[1],this.params.range[0],0,1),0,1),3);\n        let isInRange = progress > 0\n        this.params.onProgress({distance,progress,isInRange,mousePos})\n    }\n}\n\n/*\n * distance to X axis\n *\n*/\nclass ProximityX{\n    constructor(coords,params){\n        this.coords = coords\n        this.params = params\n    }\n    update(mousePos){\n        let distance = distFunctions.X(this.coords,mousePos)\n        let progress = toFixedFloat(clamp(map(distance,this.params.range[1],this.params.range[0],0,1),0,1),3);\n        let isInRange = progress > 0\n        this.params.onProgress({distance,progress,isInRange,mousePos})\n    }\n}\n\n\n\n\n\nconst Scroll = {\n\n}\n\nexport {\n    ProximityBox,\n    ProximityRadius,\n    ProximityPoint,\n    ProximityY,\n    ProximityX,\n    Scroll\n}","\n\nconst BOX = (rect,p) => {\n    let dx = Math.max(rect.minX - p.x, 0, p.x - rect.maxX);\n    let dy = Math.max(rect.minY - p.y, 0, p.y - rect.maxY);\n    return Math.round(Math.sqrt(dx*dx + dy*dy));\n}\n\nconst X = (coords,p) => {\n    return Math.abs(coords.x-p.x)\n}\n\nconst Y = (coords,p) => {\n    return Math.abs(coords.y-p.y)\n}\n\nconst POINT = (coords,p) => {\n    return \n}\n\nconst RADIUS = (coords,p) => {\n    return \n}\n\n\nexport {\n    BOX,\n    X,\n    Y,\n    POINT,\n    RADIUS\n}","import Proximity from './proximity/proximity'\n\n\nmodule.exports = Proximity\n\n\n","import { getMousePos,getScrollPos } from './helpers/dom'\nimport * as easings from './helpers/easings'\nimport * as pModules from './modules/proximityPlugins'\n\n\nclass Proximity{\n    constructor(params = {}){\n        this.params = params\n        this.isActive = this.params.mediaQuery ? false : true\n        this.subs = []\n        this.easings = easings\n        this.init()\n    }\n\n    //subscription primitives\n    box = (...args) => new pModules.ProximityBox(...args)\n    radius = (...args) => new pModules.ProximityRadius(...args)\n    point = (...args) => new pModules.ProximityPoint(...args)\n    axisX = (...args) => new pModules.ProximityX(...args)\n    axisY = (...args) => new pModules.ProximityY(...args)\n\n    //subscription handler\n    subscribe = (...sub) => this.subs.push(...sub)\n    unsubscribe = (sub) => this.subs = this.subs.filter( (s) => {s === sub} )\n\n    //event handlers\n    mousemoveFn = (ev) => {\n        if(this.isActive) return\n        requestAnimationFrame(() => this.subs.map( (sub) => this.updateSub(ev,sub)))\n    }\n    updateSub = (ev,sub) => sub.update(getMousePos(ev))\n    \n    //lifecycles\n    init = () => {\n        window.addEventListener('mousemove',this.mousemoveFn,{capture: true,passive: true})\n        if(this.params.mediaQuery){\n            window.matchMedia(this.params.mediaQuery).matches \n                ? this.isActive = true \n                : this.isActive = false\n            window.matchMedia(this.params.mediaQuery).addListener((ev)=>{\n                ev.matches \n                    ? this.isActive = true \n                    : this.isActive = false\n            })\n        }\n    }\n}\n\n\nclass ProximityScroll{\n    constructor(params = {}){\n        this.params = params\n        this.isActive = this.params.mediaQuery ? false : true\n        this.subs = []\n        this.easings = easings\n        this.init()\n    }\n\n    //subscription primitives\n    top = (...args) => new pModules.Scroll.Top(...args)\n    bottom = (...args) => new pModules.Scroll.Bottom(...args)\n\n    //subscription handler\n    subscribe = (...sub) => this.subs.push(...sub)\n    unsubscribe = (sub) => this.subs = this.subs.filter( (s) => {s === sub} )\n\n    //event handlers\n    scrollFn = (ev) => {\n        if(this.isActive) return\n        requestAnimationFrame(() => this.subs.map( (sub) => this.updateSub(ev,sub)))\n    }\n    updateSub = (ev,sub) => sub.update(getScrollPos(ev))\n    \n    //lifecycles\n    init = () => {\n        window.addEventListener('scroll',this.scrollFn,{capture: true,passive: true})\n        if(this.params.mediaQuery){\n            window.matchMedia(this.params.mediaQuery).matches \n                ? this.isActive = true \n                : this.isActive = false\n            window.matchMedia(this.params.mediaQuery).addListener((ev)=>{\n                ev.matches \n                    ? this.isActive = true \n                    : this.isActive = false\n            })\n        }\n    }\n}\n\nexport default Proximity"],"names":["const","getRect","el","elRect","getBoundingClientRect","docScrolls","document","body","scrollLeft","documentElement","scrollTop","minX","left","maxX","width","minY","top","maxY","height","t","map","n","start1","stop1","start2","stop2","clamp","min","max","Math","toFixedFloat","float","num","parseFloat","toFixed","ProximityBox","constructor","params","rect","update","mousePos","p","dx","dy","distance","this","x","y","round","sqrt","progress","range","onProgress","ProximityRadius","distFunctions","ProximityPoint","coords","ProximityY","abs","ProximityX","module","exports","box","pModules","args","radius","point","axisX","axisY","subscribe","subs","push","ref","sub","unsubscribe","filter","s","mousemoveFn","ev","isActive","updateSub","e","window","event","pageX","pageY","clientX","clientY","init","addEventListener","mediaQuery","matchMedia","matches","addListener","easings"],"mappings":"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"}